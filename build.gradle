plugins {
    id 'org.springframework.boot' version '2.6.4'
    id 'java'
    id 'groovy'
}

group 'cn.catguild'
version '1.0-SNAPSHOT'
sourceCompatibility = '17'
targetCompatibility = '17'

apply plugin: 'java'
apply plugin: 'io.spring.dependency-management'
apply plugin: "groovy"

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

repositories {
    maven { url 'https://repo.spring.io/milestone/' }
    mavenCentral()
}

dependencies {
    // spring 家族
    implementation('org.springframework.boot:spring-boot-starter-web') {
        transitive = true
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
    implementation 'org.springframework.boot:spring-boot-starter-undertow'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    // 缓存
    implementation "org.springframework.boot:spring-boot-starter-cache"
    implementation 'com.github.ben-manes.caffeine:caffeine:3.0.6'

    //权限框架
    implementation 'org.springframework.boot:spring-boot-starter-security'
    //配置文件加密
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.4'

    // 持久层依赖
    compileOnly 'com.baomidou:mybatis-plus-boot-starter:3.5.1'
    implementation 'com.alibaba:druid-spring-boot-starter:1.2.9'
    implementation 'mysql:mysql-connector-java'

    // 工具类
    implementation 'com.google.guava:guava:31.1-jre'
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
    compileOnly 'org.mapstruct:mapstruct:1.5.0.RC1'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.0.RC1'
    testAnnotationProcessor 'org.mapstruct:mapstruct-processor:1.5.0.RC1'

    // 测试框架
    // mandatory dependencies for using Spock
    testImplementation 'org.codehaus.groovy:groovy:3.0.10'
    testImplementation platform("org.spockframework:spock-bom:2.0-groovy-3.0")
    testImplementation "org.spockframework:spock-core"
    // allows mocking of classes (in addition to interfaces)
    testRuntimeOnly 'net.bytebuddy:byte-buddy:1.12.9'
    testRuntimeOnly "org.objenesis:objenesis:3.2"
    // test dao dependencies
    testImplementation 'com.h2database:h2:2.1.212'
    testImplementation 'org.codehaus.groovy:groovy-sql:3.0.10'
    testImplementation 'org.codehaus.groovy:groovy-xml:3.0.10'
    testImplementation 'org.dbunit:dbunit:2.7.3'
    // if you are using mapstruct in test code
    testCompileOnly 'org.mapstruct:mapstruct:1.5.0.RC1'
    testAnnotationProcessor 'org.mapstruct:mapstruct-processor:1.5.0.RC1'
    // 断言库
    testImplementation 'org.assertj:assertj-core:3.22.0'
}

compileJava {
    options.compilerArgs += [
        '-Amapstruct.suppressGeneratorTimestamp=true',
        '-Amapstruct.suppressGeneratorVersionInfoComment=true',
        '-Amapstruct.verbose=true'
    ]
}

sourceSets {
    main {
        resources {
            //可以将java目录下的所有非.java资源打包到classes下
            srcDir 'src/main/java'
        }
    }

    test {
        resources {
            //可以将java目录下的所有非.java资源打包到classes下
            srcDir 'src/test/groovy'
        }
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

task copyTestResources(type: Copy) {
    from "${projectDir}/src/test/resources"
    into "${buildDir}/resources/test"
}
processTestResources.dependsOn copyTestResources
